/** Keyboard and Command Line Menus for Code and Parameter <a href="https://github.com/ferrall/OxMenu/releases/latest">Latest Release</a>.

<DT>This package offers two classes for prompting user of an Ox program to select from a menu of functions and sub menus.</DT>

<DT>The programmer creates an object of the class for the menu.  It then adds a list of items for the menu.</DT>
<DD><code>CallMenu</code> an item is array of two things: prompt and either a functions to run or submenu to enter.</DD>
<DD>For <code>ParamMenu</code> an item is a prompt and a default value of the parameter.</DD>

<DT>The program can run a menu interactively or read options from command line arguments.</DT>

<DT>Interactive Mode</DT>

<DD>CallMenu prints the menu and reads integer selections from the keyboard. It adds options to run all the items on the list and to navigate submenus, exit Ox altogether or simply quit the menu and return to the program.</DD>
<DD>ParamMenu prints the parameter list and reads integer selections of values to change.  A second prompt then reads new values from the keyboard.  Matrix elements are entered by row and must match the dimension of the default value.  An option to reset all parameters.  Another option either returns parameters as a list to the calling program or sends the list to a function sent to the interactive menu.  If a function is called, the program returns to the menu and the user can enter new values and continue to rerun the function.</DD>

<DT>Command Line Mode</DT>
<DD>The command line mode reads arguments sent to the program past a point specified (the default is all command line arguments or menu options.</DD>
<DD>For CallMenu the items are read as if entered from the keyboard including the DOALL option.  Once a function has been called the menu automatically returns to the top menu and starts over. (In interactive mode the user enters a value to move up a level.)</DD>
<DD>For ParamMenu if no arguments are given then default parameters are returned or used.  Otherwise command line arguments
are in the form: <code>k=val</code> where <code>k</code> is the index, "=" is the equal sign and <code>val</code> is either an integer, double or a string containing elements of a matrix parameter to be scanned in using the "%M" formatting code.

<details><summary>An CallMenu example: <a href="javascript:popoxcode('../examples/example1.ox');">examples/example1.ox</a>.</summary>
<dd><h4>Code</h4>    
<pre><object width="95%" height="300" type="text/plain" data="../examples/example1.ox" border="1" ></object></pre>
<h4>Output</h4>
<pre><object width="95%" height="200" type="text/plain" data="../examples/example1.txt" border="1" ></object>
</pre>
</dd>

</details>


<details><summary>A ParamMenu example:<a href="javascript:popoxcode('../examples/example2.ox');">examples/example2.ox</a>.</summary>
<dd><h4>Code</h4>
<pre><object width="95%" height="300" type="text/plain" data="../examples/example2.ox" border="1" ></object>
<h4>Output</h4>
<pre><object width="95%" height="200" type="text/plain" data="../examples/example2.txt" border="1" ></object>    
</pre></dd></details>


@author  Copyright &copy; 2017-2020 <a href="http://econ.queensu.ca/~ferrall">Christopher Ferrall</a>.

**/ 